import{_ as i}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as a,c as l,e}from"./app.59944050.js";const r={},h=e('<h2 id="对技术架构的理解" tabindex="-1"><a class="header-anchor" href="#对技术架构的理解" aria-hidden="true">#</a> 对技术架构的理解</h2><h3 id="顶层设计" tabindex="-1"><a class="header-anchor" href="#顶层设计" aria-hidden="true">#</a> 顶层设计</h3><ul><li>要做什么事要定义的非常清楚，要达到什么样的结果也要定义的非常清楚</li></ul><h3 id="物理架构" tabindex="-1"><a class="header-anchor" href="#物理架构" aria-hidden="true">#</a> 物理架构</h3><ul><li>独立</li><li>连续性</li></ul><h3 id="应用架构" tabindex="-1"><a class="header-anchor" href="#应用架构" aria-hidden="true">#</a> 应用架构</h3><ul><li>将单纯的代码共建模型抽象成横向和纵向的业务包模型，做到业务与业务隔离，业务与平台隔离</li></ul><h2 id="架构师的角色" tabindex="-1"><a class="header-anchor" href="#架构师的角色" aria-hidden="true">#</a> 架构师的角色</h2><h3 id="型散而神不散" tabindex="-1"><a class="header-anchor" href="#型散而神不散" aria-hidden="true">#</a> 型散而神不散</h3><ul><li>用<strong>架构的意识</strong>解决实际的技术/业务问题</li></ul><h3 id="前瞻性" tabindex="-1"><a class="header-anchor" href="#前瞻性" aria-hidden="true">#</a> 前瞻性</h3><ul><li><strong>大量的实践和知识积累</strong>，站在过去的肩膀上</li><li><strong>接触更多的人和事，用新的方法解决新的问题</strong></li></ul><h3 id="解决复杂问题" tabindex="-1"><a class="header-anchor" href="#解决复杂问题" aria-hidden="true">#</a> 解决复杂问题</h3><ul><li>基本面：高并发和高可用</li><li>紧迫问题：用户体验、提升效率、低成本</li><li>挑战：用户分层、内部技术人员增多</li></ul><h2 id="架构师需要的能力" tabindex="-1"><a class="header-anchor" href="#架构师需要的能力" aria-hidden="true">#</a> 架构师需要的能力</h2><h3 id="发现问题" tabindex="-1"><a class="header-anchor" href="#发现问题" aria-hidden="true">#</a> 发现问题</h3><ul><li>看待问题。不要只看见眼前这一个问题，还要看见这个问题背后是什么，这一类问题背后是什么，我怎么能用抽象的方法解决一类问题</li></ul><h3 id="定义和分析问题" tabindex="-1"><a class="header-anchor" href="#定义和分析问题" aria-hidden="true">#</a> 定义和分析问题</h3><ul><li>将发现的问题进行抽象和归纳，定义出问题的基本要素，同时定义出问题的短期和长期方案，推进技术的进步</li></ul><h3 id="解决问题" tabindex="-1"><a class="header-anchor" href="#解决问题" aria-hidden="true">#</a> 解决问题</h3><ul><li>实施路径和解决方案，协同团队和上下游，推进问题的解决。</li><li>架构要解决的一定是一个全局问题 <ol><li>沟通能力</li><li>救火能力</li></ol></li></ul><h2 id="架构师的挑战" tabindex="-1"><a class="header-anchor" href="#架构师的挑战" aria-hidden="true">#</a> 架构师的挑战</h2><ol><li>全局式的视角</li><li>技术广度。<strong>彻底了解透彻</strong>目前用到的技术，依赖于积累，带着问题去想。将<strong>知识形成体系</strong>，有能力去消化和打通不同技术点背后的相关性</li><li>持续学习。 <ol><li>跟工作相关，体系化学习。</li><li>去看论文。 <ol><li>数据相关。OLTP 和 OLAP</li></ol></li><li>业务理解。跟业务结合，用不一样的思路解决实际的业务问题，带来更低的成本、更高的效率</li><li>结果。协调更多的人。</li></ol></li></ol><h2 id="架构师的工作模式" tabindex="-1"><a class="header-anchor" href="#架构师的工作模式" aria-hidden="true">#</a> 架构师的工作模式</h2><ol><li>内部工作。思考和处理信息，团队中的沟通（50）</li><li>内部沟通。必须了解很广泛的知识，包括倾听、阅读和问问题（25）</li><li>对外沟通。信息传播，包括文档演示、写文档和提供支持（25）</li></ol><h3 id="异步传播" tabindex="-1"><a class="header-anchor" href="#异步传播" aria-hidden="true">#</a> 异步传播</h3><blockquote><p>问题点：缺乏沟通</p></blockquote><ol><li>书面方式传播</li><li>决策记录</li><li>常规简报。每周给项目成员发一份简报</li><li>具象化是一种通用的语言。让架构师承担起为具体的场景解释架构的职责。减少谈论大的概览。</li></ol>',28),d=[h];function n(t,o){return a(),l("div",null,d)}const u=i(r,[["render",n],["__file","index.html.vue"]]);export{u as default};
