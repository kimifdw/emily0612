import{_ as o}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as n,c as l,a as e,b as t,d as a,e as i,r as c}from"./app.59944050.js";const s={},h=i('<h2 id="定义" tabindex="-1"><a class="header-anchor" href="#定义" aria-hidden="true">#</a> 定义</h2><blockquote><p>测试在先，编码灾后，采用“红-绿-重构”三个步骤的循环往复。</p></blockquote><ol><li>红：测试先行，现在还没有任何实现，跑 UT 的时候肯定不过，测试状态是红灯。编译失败也属于“红”的一种情况。</li><li>绿：当我们用最快，最简单的方式先实现，然后跑一遍 UT，测试会通过，变成“绿”的状态。</li><li>重构：看一下系统中有没有要重构的点，重构完，一定要保证测试是“绿”的。</li><li>TDD 比较适合用于输入输出很明确的 CASE</li></ol><h2 id="特性" tabindex="-1"><a class="header-anchor" href="#特性" aria-hidden="true">#</a> 特性</h2><ol><li>隔离性。单元测试之间应该隔离，不要互相干扰</li></ol><h2 id="资料" tabindex="-1"><a class="header-anchor" href="#资料" aria-hidden="true">#</a> 资料</h2>',6),d={href:"https://martinfowler.com/articles/practical-test-pyramid.html",target:"_blank",rel:"noopener noreferrer"},_={href:"http://insights.thoughtworks.cn/practical-test-pyramid/",target:"_blank",rel:"noopener noreferrer"},p={href:"https://mp.weixin.qq.com/s/TjJ31yWTMwr4szz1JqtKcQ",target:"_blank",rel:"noopener noreferrer"};function f(m,u){const r=c("ExternalLinkIcon");return n(),l("div",null,[h,e("ol",null,[e("li",null,[e("a",d,[t("practical-test-pyramid"),a(r)])]),e("li",null,[e("a",_,[t("中文翻译"),a(r)])]),e("li",null,[e("a",p,[t("测试资料"),a(r)])])])])}const b=o(s,[["render",f],["__file","index.html.vue"]]);export{b as default};
